options 
{
  IGNORE_CASE=false;
}

PARSER_BEGIN(VNM)

public class VNM 
{

}

PARSER_END(VNM)

TOKEN_MGR_DECLS : 
{

}

// Characters/strings to be skipped 
// (they don't contribute to a token)
SKIP : 
{
        " "     
    |   "\t"    
    |   "\n"    
    |   "\r" 
}

TOKEN : 
{
  < LESS:   "<"   >
| < LE:     "<="  >
| < GREAT:  ">"   >
| < GE:     ">="  >
| < EQ:     "=="  >
| < NEQ:    "!="  >
| < IN:     "=in" >
| < NOTIN:  "!in" >
| < PLUS:	  "+"   >
| < MINUS:	"-"   >
| < TIMES:	"*"   >
| < DIV:	  "/"   >
| < AND:	  "&"   >
| < VBAR:	  "|"   >
| < NOT:	  "!"   >
| < ASSGN:	":="   >
| < LRND:	  "("   >
| < LSQU:	  "["   >
| < RRND:	  ")"   >
| < RSQU:	  "]"   >
| < COMMA:	","   >
| < SCOL:	  ";"   >
| < TRUE:	  "#1"  >
| < FALSE:	"#0"  >
| < RANGE:	".."  >
}

TOKEN [IGNORE_CASE]:
{
  < DO:"DO">
| < WHILE:"WHILE">
| < FOR:"FOR">
| < IF:"IF">
| < THEN:"THEN">
| < ELIF:"ELIF">
| < ELSE:"ELSE">
| < FI:"FI">
| < FUNCTION:"FUNCTION">
| < RETURN:"RETURN">
| < END:"END">
| < PRINT:"PRINT">
| < PRINTLN:"PRINTLN">
| < VAR:"VAR">
}

TOKEN : 
{
  < #DIGIT:	["0"-"9"]>
|	< #LOWER:	["a"-"z"]>
|	< #UPPER:	["A"-"Z"]>
|	< #LETTER: ["a"-"z","A"-"Z"]>

// Passes strings1 and strings2.
| < STRING: "\"" (~["\""])* "\"" > 
|	< NUMBER:	(<DIGIT>)+ >
|	< IDNUM:  "#" <LETTER>(<LETTER>|<DIGIT>)* >  
|	< IDBOOL:	"?" <LETTER>(<LETTER>|<DIGIT>)* >
|	< IDVEC:  "v_" (<LETTER>|<DIGIT>)+ >  

}

// Special tokens are saved, but not sent to the parser
SPECIAL_TOKEN : 
{
  <COMMENT_SINGLE: "//" (~["\n","\r"])* ("\n"|"\r"|"\r\n")>
}
   
   
   
   